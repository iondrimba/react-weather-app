{"version":3,"sources":["helpers/rAFTimeout.js","components/Forecast/index.js","components/Forecast/Temperature.js","components/Location/index.js","components/Temperature/index.js","components/Navigation/index.js","components/RainProbability/index.js","components/GPSLocation/index.js","components/Info/index.js","components/DateCurrent/index.js","components/Refresh/index.js","app/Home/index.js","components/Close/index.js","app/Info/index.js","components/Loader/index.js","api/ipGeoLocation.js","api/foreCastAPI.js","api/reverseGeoLocation.js","api/ipfetcher.js","helpers/time.js","helpers/icons.js","helpers/weekdays.js","initialState.js","app/storage.js","app/index.js","registerServiceWorker.js","index.js"],"names":["rAFTimeout","fn","delay","arguments","length","undefined","start","Date","getTime","handle","value","requestAnimationFrame","loop","call","Forecast","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","forecast","React","createRef","_this2","current","classList","add","title","icon","temperature","map","elment","rain","_this3","querySelector","toConsumableArray","querySelectorAll","animate","props","animationDelay","react_default","a","createElement","ref","className","data-id","id","alt","src","concat","children","Component","ForeCastTemperature","Location","text","enableBackground","height","version","viewBox","width","d","location","Temperature","status","unit","weather","Navigation","navigation","dots","index","currentForecast","RainProbability","_ref","probability","GPSLocation","button","onMouseDown","bind","assertThisInitialized","onMouseUp","_this4","remove","_this5","type","aria-label","onTouchStart","onTouchEnd","onClick","onGPSLocationClick","xmlns","cx","cy","r","Info","onInfoClick","DateCurrent","date","Refresh","view","getClass","updating","animation","time","Home","state","forecastIndex","forecasts","document","swiper","Swiper","direction","on","setState","activeIndex","react","src_components_GPSLocation","src_components_Info","onInfoClose","src_components_Location","currentCondition","src_components_DateCurrent","src_components_Temperature","src_components_Refresh","onRefreshClick","lastUpdate","foreCastHourly","item","src_components_Forecast","key","Forecast_Temperature","src_components_RainProbability","rainProbability","foreCastDaily","weekDay","max","min","src_components_Navigation","Close","onCloseClick","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","transition","close","hide","setAttribute","show","getStyle","aria-hidden","src_components_Close","href","target","rel","Loader","loader","circle","rays","animateCircle","animateRays","startRotation","element","IpGeoLocation","secret","endpoint","ip","data","fetch","response","json","result","Error","_context","t0","message","ForeCastAPI","apiSecret","latitude","longitude","ReverseGeoLocation","IpFetcher","addLeadingZero","unixTimestamp","locale","finalDate","utc","test","toString","getTimezoneOffset","addTimezonOffset","setupDate","year","getFullYear","getDay","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","localeDateString","toLocaleDateString","weekday","icons","iconKey","clear-day","clear-night","partly-cloudy-day","partly-cloudy-night","cloudy","sleet","snow","wind","fog","weekdays","initialState","showInfo","dataLoaded","dayTime","humidity","Storage","ipFetcher","ipGeoLocation","foreCastAPI","process","reverseGeoLocation","objectSpread","currentDate","getLastUpdate","city","timeConvert","currently","Math","round","summary","hourly","slice","precipProbability","daily","temperatureMax","temperatureMin","localStorage","getItem","setItem","JSON","parse","stringify","_updateIP","_updateGeoLocation","_updateForecast","update","prevDate","Number","hoursDiff","abs","App","storage","animateIn","animateOut","updatedState","getLocation","navigator","geolocation","getCurrentPosition","position","onGetCurrentLocation","coords","_this$storage$data","init","app_Home","src_app_Info","src_components_Loader","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_app","getElementById","URL","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dd3e9250.chunk.js","sourcesContent":["export default function (fn, delay = 0) {\n  const start = new Date().getTime(),\n    handle = {};\n\n  function loop () {\n    const current = new Date().getTime(),\n      delta = current - start;\n\n    delta >= delay ? fn.call() : handle.value = requestAnimationFrame(loop);\n  };\n\n  handle.value = requestAnimationFrame(loop);\n\n  return handle;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Forecast extends Component {\n  constructor() {\n    super();\n\n    this.forecast = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.forecast.current.classList.add('animate-in'), 100);\n\n    rAFTimeout(() => this.title.classList.add('animate-in'), 200);\n\n    rAFTimeout(() => this.icon.classList.add('animate-in'), 250);\n\n    rAFTimeout(() => {\n      this.temperature.map(elment => elment.classList.add('animate-in'));\n    }, 350);\n\n    rAFTimeout(() => this.rain.classList.add('animate-in'), 400);\n  }\n\n  componentDidMount() {\n    this.title = this.forecast.current.querySelector('.forecast__title');\n    this.icon = this.forecast.current.querySelector('.forecast__icon');\n    this.temperature = [...this.forecast.current.querySelectorAll('.forecast__temperature')];\n    this.rain = this.forecast.current.querySelector('.rain');\n\n    rAFTimeout(() => this.animate(), this.props.animationDelay * 100);\n  }\n\n  render() {\n    return (\n      <div ref={this.forecast} className=\"forecast\" data-id={this.props.id}>\n        <span className=\"forecast__title\">{this.props.title}</span>\n        <img className=\"forecast__icon\" alt=\"icon\" src={`svg/${this.props.icon}.svg`} />\n\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nForecast.propTypes = {\n  id: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  animationDelay: PropTypes.number.isRequired,\n  children: PropTypes.any.isRequired,\n};\n\nexport default Forecast;\n","\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ForeCastTemperature extends Component {\n  render() {\n    return (\n      <p className=\"forecast__temperature\">{this.props.temperature}\n        <span className=\"temperature__unit-dot\"></span>\n      </p>\n    )\n  }\n}\n\nForeCastTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired\n};\n\nexport default ForeCastTemperature;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Location extends Component {\n  constructor() {\n    super();\n\n    this.icon = React.createRef();\n    this.text = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.icon.current.classList.add('animate-in'), 250);\n    rAFTimeout(() => this.text.current.classList.add('animate-in'), 350);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <section className=\"location\">\n        <span ref={this.icon} className=\"location__icon\">\n          <svg enableBackground=\"new 0 0 24 24\" height=\"24px\" id=\"location\" version=\"1.1\" viewBox=\"0 0 24 24\" width=\"24px\">\n            <path d=\"M11.513,12.38c-2.117,0-3.835-1.729-3.835-3.862c0-2.135,1.718-3.863,3.835-3.863s3.835,1.729,3.835,3.863  C15.348,10.65,13.63,12.38,11.513,12.38 M11.513,0C6.825,0,3.025,3.827,3.025,8.549c0,4.46,3.844,10.213,6.411,13.014  c0.959,1.045,2.076,2.454,2.076,2.454s1.2-1.417,2.229-2.493C16.306,18.84,20,13.451,20,8.549C20,3.827,16.2,0,11.513,0\" />\n          </svg>\n        </span>\n        <span ref={this.text} className=\"location__text\">{this.props.location}</span>\n      </section>\n    )\n  }\n}\n\nLocation.propTypes = {\n  location: PropTypes.string.isRequired\n};\n\nexport default Location;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Temperature extends Component {\n  constructor() {\n    super();\n\n    this.status = React.createRef();\n    this.value = React.createRef();\n    this.unit = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.status.current.classList.add('animate-in'), 150);\n    rAFTimeout(() => this.value.current.classList.add('animate-in'), 250);\n    rAFTimeout(() => this.unit.current.classList.add('animate-in'), 300);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 400);\n  }\n\n  render() {\n    return (\n      <section className=\"current-condition\">\n        <div className=\"wrapper-temperature\">\n          <span ref={this.status} className=\"temperature__status\">{this.props.weather}</span>\n          <div className=\"temperature\">\n            <span ref={this.value} className=\"temperature__value\">{this.props.temperature}</span>\n            <div ref={this.unit} className=\"temperature__unit\">\n              <span className=\"temperature__unit-dot\"></span>\n              <span className=\"temperature__unit-letter\">c</span>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nTemperature.propTypes = {\n  weather: PropTypes.string.isRequired,\n  temperature: PropTypes.number.isRequired\n};\n\nexport default Temperature;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Navigation extends Component {\n  constructor() {\n    super();\n\n    this.navigation = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => {\n      this.dots.map((elment, index) => {\n        rAFTimeout(() => elment.classList.add('animate-in'), index * 150);\n\n        return elment;\n      });\n    }, 350);\n  }\n\n  componentDidMount() {\n    this.dots = [...this.navigation.current.querySelectorAll('.navigation__dot')];\n\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <section ref={this.navigation} className={`navigation ${this.props.currentForecast}`}>\n        <div className=\"navigation__dot\"></div>\n        <div className=\"navigation__dot\"></div>\n      </section>\n    )\n  }\n}\n\nNavigation.propTypes = {\n  currentForecast: PropTypes.string.isRequired\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.scss';\n\nconst RainProbability = ({ probability }) => (\n  <div className=\"rain\">\n    <img width=\"24\" height=\"24\" className=\"rain__icon\" src=\"/svg/rain-probality.svg\" alt=\"alt\" />\n    <span className=\"rain__probability\">{`${probability}%`}</span>\n  </div>\n);\n\nRainProbability.propTypes = {\n  probability: PropTypes.number.isRequired\n};\n\nexport default RainProbability;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass GPSLocation extends Component {\n  constructor() {\n    super();\n\n    this.button = React.createRef();\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n  }\n\n  animate() {\n    rAFTimeout(() => this.button.current.classList.add('animate-in'), 430);\n  }\n\n  onMouseDown() {\n    rAFTimeout(() => this.button.current.classList.add('press'), 1);\n  }\n\n  onMouseUp() {\n    rAFTimeout(() => this.button.current.classList.remove('press'), 1);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <button ref={this.button} type=\"button\" className=\"gps-location\" aria-label=\"Get current location\" onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onClick={this.props.onGPSLocationClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"gpslocation\" viewBox=\"0 0 96 96\">\n          <g id=\"XMLID_1_\">\n            <circle id=\"XMLID_3_\" cx=\"48\" cy=\"48\" r=\"9.8\" />\n            <path id=\"XMLID_6_\" d=\"M80.5 44.8h-6.7C72.3 33 63 23.7 51.3 22.2v-6.7h-6.5v6.7C33 23.7 23.7 33 22.2 44.8h-6.7v6.5h6.7C23.7 63 33 72.3 44.8 73.8v6.7h6.5v-6.7C63 72.3 72.3 63 73.8 51.3h6.7v-6.5zM48 67.5c-10.8 0-19.5-8.7-19.5-19.5S37.2 28.5 48 28.5 67.5 37.2 67.5 48 58.8 67.5 48 67.5z\" />\n          </g>\n        </svg>\n      </button>\n    )\n  }\n}\n\nGPSLocation.propTypes = {\n  onGPSLocationClick: PropTypes.func\n};\n\nexport default GPSLocation;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Info extends Component {\n  constructor() {\n    super();\n\n    this.button = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.button.current.classList.add('animate-in'), 500);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <button ref={this.button} type=\"button\" className=\"button-info\" aria-label=\"Information\" onClick={this.props.onInfoClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path d=\"M12 0C5.371 0 0 5.371 0 12s5.371 12 12 12 12-5.371 12-12S18.629 0 12 0zm0 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 3.813c-.184 0-.336-.004-.5.03a1.127 1.127 0 0 0-.438.22.98.98 0 0 0-.28.375c-.071.152-.095.332-.095.562 0 .227.024.406.094.563.07.156.16.28.281.375.122.093.274.148.438.187.164.04.316.063.5.063.18 0 .371-.024.531-.063.16-.04.285-.094.406-.188a.951.951 0 0 0 .282-.375c.07-.152.125-.335.125-.562 0-.23-.055-.41-.125-.563a.98.98 0 0 0-.281-.375c-.122-.093-.247-.183-.407-.218-.16-.035-.351-.032-.531-.032zm-1.219 3.343v8.969h2.438V9.156z\" />\n        </svg>\n      </button>\n    )\n  }\n}\n\nInfo.propTypes = {\n  onInfoClick: PropTypes.func\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass DateCurrent extends Component {\n  constructor() {\n    super();\n\n    this.text = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.text.current.classList.add('animate-in'), 400);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <section className=\"date-current\">\n        <span ref={this.text} className=\"date-current__text\">\n          {this.props.date}\n        </span>\n      </section>\n    )\n  }\n}\n\nDateCurrent.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default DateCurrent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Refresh extends Component {\n  constructor() {\n    super();\n\n    this.view = React.createRef();\n    this.button = React.createRef();\n    this.getClass = this.getClass.bind(this)\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n  }\n\n  animate() {\n    rAFTimeout(() => this.view.current.classList.add('animate-in'), 350);\n  }\n\n  onMouseDown() {\n    rAFTimeout(() => this.button.current.classList.add('press'), 1);\n  }\n\n  onMouseUp() {\n    rAFTimeout(() => this.button.current.classList.remove('press'), 1);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  getClass({ updating }) {\n    let animation = '';\n\n    if (this.view.current) {\n      animation = 'animate-in';\n    }\n\n    return `refresh ${animation} ${updating ? 'fetching' : ''}`;\n  }\n\n  render() {\n    return (\n      <section ref={this.view} className={`${this.getClass(this.props)}`}>\n        <span className=\"refresh__time\">{this.props.time}</span>\n        <button ref={this.button} type=\"button\" className=\"button-refresh\" aria-label=\"Refresh content\" onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onClick={this.props.onClick}>\n          <svg viewBox=\"0 0 96 96\">\n            <path d=\"M48 15.5c-8.8 0-17 3.5-23 9.5l-6.3-6.3v19.5h19.5l-8.6-8.6C34.4 24.8 40.9 22 48 22c14.3 0 26 11.7 26 26S62.3 74 48 74 22 62.3 22 48h-6.5c0 17.9 14.6 32.5 32.5 32.5S80.5 65.9 80.5 48 65.9 15.5 48 15.5z\" />\n          </svg>\n        </button>\n      </section>\n    )\n  }\n}\n\nRefresh.propTypes = {\n  onClick: PropTypes.func,\n  time: PropTypes.string,\n};\n\nexport default Refresh;\n","import React, { Component, Fragment } from 'react';\nimport Swiper from 'swiper/dist/js/swiper.js';\nimport ForeCast from '../../components/Forecast';\nimport ForeCastTemperature from '../../components/Forecast/Temperature';\nimport Location from '../../components/Location';\nimport Temperature from '../../components/Temperature';\nimport Navigation from '../../components/Navigation';\nimport RainProbability from '../../components/RainProbability';\nimport GPSLocation from '../../components/GPSLocation';\nimport Info from '../../components/Info';\nimport DateCurrent from '../../components/DateCurrent';\nimport Refresh from '../../components/Refresh';\nimport PropTypes from 'prop-types';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentForecast: 'hourly',\n      forecastIndex: ['hourly', 'daily'],\n    };\n  }\n\n  componentDidMount() {\n    this.forecasts = [...document.querySelectorAll('.forecasts__period')];\n\n    this.swiper = new Swiper('.swiper-container', {\n      direction: 'horizontal',\n      loop: false\n    });\n\n    this.swiper.on('slideChangeTransitionEnd', () => {\n      this.setState({ currentForecast: this.state.forecastIndex[this.swiper.activeIndex] });\n    });\n  }\n\n  render() {\n    return <Fragment>\n      <GPSLocation onGPSLocationClick={this.props.onGPSLocationClick} />\n      <Info onInfoClick={this.props.onInfoClick} onInfoClose={this.props.onInfoClose} />\n      <Location location={this.props.currentCondition.location} />\n      <DateCurrent date={this.props.currentCondition.date} />\n      <Temperature weather={this.props.currentCondition.weather} temperature={this.props.currentCondition.temperature} />\n      <Refresh onClick={this.props.onRefreshClick} updating={this.props.updating} time={this.props.lastUpdate} />\n      <section className=\"forecasts\">\n        <div className=\"forecasts__scroll-panel swiper-container\">\n          <div className=\"swiper-wrapper\">\n            <section className=\"forecasts__period swiper-slide\">\n              {\n                this.props.foreCastHourly.map((item, index) => <ForeCast key={`hourly-${index}`} id={`hourly-${index}`} title={`${item.time}:00`} icon={item.icon} animationDelay={index}>\n                  <ForeCastTemperature temperature={item.temperature} />\n                  <RainProbability probability={item.rainProbability} />\n                </ForeCast>)\n              }\n            </section>\n\n            <section className=\"forecasts__period forecasts--daily swiper-slide\">\n              {\n                this.props.foreCastDaily.map((item, index) => <ForeCast key={`daily-${index}`} id={`daily-${index}`} title={item.weekDay} icon={item.icon} animationDelay={index}>\n                  <div>\n                    <ForeCastTemperature temperature={item.temperature.max} />\n                    <ForeCastTemperature temperature={item.temperature.min} />\n                  </div>\n                  <RainProbability probability={item.rainProbability} />\n                </ForeCast>)\n              }\n            </section>\n          </div>\n        </div>\n        <Navigation currentForecast={this.state.currentForecast} />\n      </section>\n    </Fragment>\n  }\n}\n\nHome.propTypes = {\n  foreCastHourly: PropTypes.array,\n  foreCastDaily: PropTypes.array,\n  updating: PropTypes.bool,\n  lastUpdate: PropTypes.string,\n  currentCondition: PropTypes.object,\n  onGPSLocationClick: PropTypes.func,\n  onInfoClick: PropTypes.func,\n  onInfoClose: PropTypes.func,\n  onRefreshClick: PropTypes.func\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Close extends Component {\n  constructor() {\n    super();\n\n    this.button = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.button.current.classList.add('animate-in'), 1);\n  }\n\n  hide() {\n    rAFTimeout(() => this.button.current.classList.remove('animate-in'), 1);\n  }\n\n  render() {\n    return (\n      <button ref={this.button} type=\"button\" className=\"button-close\" aria-label=\"Close view\" onClick={this.props.onCloseClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"#fff\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\">\n          <path d=\"M18 6L6 18M6 6l12 12\" />\n        </svg>\n      </button>\n    )\n  }\n}\n\nClose.propTypes = {\n  onCloseClick: PropTypes.func,\n};\n\nexport default Close;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport Close from '../../components/Close';\nimport './index.scss';\nimport './transition.scss';\n\nclass Info extends Component {\n  constructor() {\n    super();\n\n    this.transition = React.createRef();\n    this.view = React.createRef();\n    this.close = React.createRef();\n    this.onInfoClose = this.onInfoClose.bind(this);\n  }\n\n  onInfoClose() {\n    rAFTimeout(() => this.view.current.classList.remove('animate-in'), 1);\n    rAFTimeout(() => this.close.current.hide(), 20);\n    rAFTimeout(() => this.transition.current.classList.remove('animate-in'), 100);\n    rAFTimeout(() => {\n      this.props.onInfoClose();\n      this.view.current.setAttribute('aria-hidden', true);\n    }, 110);\n  }\n\n  getStyle(show) {\n    if (!show) {\n      return '';\n    }\n\n    rAFTimeout(() => this.transition.current.classList.add('animate-in'), 1);\n\n    rAFTimeout(() => this.close.current.animate(), 50);\n\n    rAFTimeout(() => {\n      this.view.current.classList.remove('hide');\n      this.view.current.classList.add('animate-in');\n      this.view.current.setAttribute('aria-hidden', false);\n    }, 150);\n\n    return '';\n  }\n\n  render() {\n    return <Fragment>\n      <div ref={this.transition} className=\"transition\"></div>\n      <section ref={this.view} className={`info ${this.getStyle(this.props.show)}`} aria-hidden={true}>\n        <Close ref={this.close} onCloseClick={this.onInfoClose} />\n        <h1>About</h1>\n        <p>PWA Weather Application made with React/Scss/ES6</p>\n        <p>This is a personal project built in my spare time for learning purposes.</p>\n        <h2>APIs</h2>\n        <ul>\n          <li><a className=\"link\" href=\"https://www.ipify.org\" target=\"_blank\" rel=\"noopener noreferrer\">Ipify (ip address)</a></li>\n          <li><a className=\"link\" href=\"https://ipstack.com\" target=\"_blank\" rel=\"noopener noreferrer\">IpStack (ip based geolocation)</a></li>\n          <li><a className=\"link\" href=\"https://darksky.net\" target=\"_blank\" rel=\"noopener noreferrer\">DarkSky (weather forecasting)</a></li>\n          <li><a className=\"link\" href=\"https://opencagedata.com/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenCage (reverse geolocation)</a></li>\n        </ul>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/iondrimba/react-weather-app\" className=\"github\" title=\"Github\">\n          <img src=\"/svg/github.svg\" alt=\"Github icon\" width=\"32\" height=\"32\" />\n        </a>\n      </section>\n    </Fragment>\n  }\n}\n\nInfo.propTypes = {\n  show: PropTypes.bool,\n  onInfoClick: PropTypes.func,\n  onInfoClose: PropTypes.func\n};\n\nexport default Info;\n","import React, { Component } from 'react';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Loader extends Component {\n  constructor() {\n    super();\n\n    this.loader = React.createRef();\n    this.circle = React.createRef();\n    this.rays = [];\n  }\n\n  animateIn() {\n    this.animateCircle();\n\n    rAFTimeout(() => this.animateRays(), 300);\n\n    rAFTimeout(() => this.startRotation(), 500);\n  }\n\n  animateRays() {\n    this.rays.map((element, index) => {\n      rAFTimeout(() => element.classList.add('animate-in'), index * 80);\n\n      return element;\n    });\n  }\n\n  startRotation() {\n    rAFTimeout(() => this.circle.current.classList.add('start-rotation'), 300);\n  }\n\n  animateCircle() {\n    rAFTimeout(() => this.circle.current.classList.add('animate-in'), 150);\n  }\n\n  animateOut() {\n    rAFTimeout(() => this.circle.current.classList.add('animate-out'), 550);\n\n    this.rays.map((element, index) => {\n      rAFTimeout(() => element.classList.add('animate-out'), index * 50);\n\n      return element;\n    });\n  }\n\n  componentDidMount() {\n    this.rays = [...this.circle.current.querySelectorAll('.ray')];\n  }\n\n  render() {\n    return (\n      <div ref={this.loader} className=\"loader\">\n        <div ref={this.circle} className=\"loader__circle\">\n          {\n            [0, 1].map((index) => <div key={`ray_${index}`} className=\"rays\">\n              <div className=\"ray ray--north\"></div>\n              <div className=\"ray ray--west\"></div>\n              <div className=\"ray ray--south\"></div>\n              <div className=\"ray ray--east\"></div>\n            </div>)\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Loader;\n","class IpGeoLocation {\n  constructor(secret) {\n    this.endpoint = ip => `https://weather-api-nodejs.herokuapp.com/api/ip?ip=${ip}`;\n    this.data = null;\n    this.secret = secret;\n  }\n\n  async fetch(ip) {\n    try {\n      const response = await fetch(this.endpoint(ip));\n      const result = await response.json();\n\n      this.data = result;\n    } catch (error) {\n      throw new Error(`IpGeoLocation unable to fetch: ${error.message}`);\n    }\n  }\n}\n\nexport default IpGeoLocation;\n","class ForeCastAPI {\n  constructor(apiSecret) {\n    this.secret = apiSecret;\n    this.endpoint = (latitude, longitude) => `https://weather-api-nodejs.herokuapp.com/api?latitude=${latitude}&longitude=${longitude}`;\n    this.data = null;\n  }\n\n  async fetch(latitude, longitude) {\n    try {\n      const response = await fetch(this.endpoint(latitude, longitude));\n      this.data = await response.json();\n    } catch (error) {\n      throw new Error(`ForeCastAPI unable to fetch: ${error.message}`);\n    }\n  }\n}\n\nexport default ForeCastAPI;\n","class ReverseGeoLocation {\n  constructor() {\n    this.endpoint = (latitude, longitude) => `https://weather-api-nodejs.herokuapp.com/api/geolocation?latitude=${latitude}&longitude=${longitude}`;\n    this.data = null;\n  }\n\n  async fetch(latitude, longitude) {\n    try {\n      const response = await fetch(this.endpoint(latitude, longitude));\n      const result = await response.json();\n\n      this.data = result;\n    } catch (error) {\n      throw new Error(`ReverseGeoLocation unable to fetch: ${error.message}`);\n    }\n  }\n}\n\nexport default ReverseGeoLocation;\n","class IpFetcher {\n  constructor() {\n    this.ip = '';\n    this.endpoint = 'https://api.ipify.org/?format=json';\n  }\n\n  async fetch() {\n    try {\n      const response = await fetch(this.endpoint);\n      const result = await response.json();\n      this.ip = result.ip;\n    } catch (error) {\n      throw new Error(`IpFetcher unable to fetch: ${error.message}`);\n    }\n  }\n}\n\nexport default IpFetcher;\n","const addLeadingZero = (value) => (value < 10) ? `0${value}` : value;\n\nconst addTimezonOffset = (date, time) => {\n  const match = /GMT\\+\\d+/.test(date.toString());\n  let result = time;\n\n  if (match) {\n    result = time + date.getTimezoneOffset() * 60000;\n  }\n\n  return result;\n};\n\nconst setupDate = (unixTimestamp) => {\n  const date = new Date(unixTimestamp * 1000);\n  const utc = date.getTime();\n\n  return new Date(addTimezonOffset(date, utc));\n};\n\nexport default function (unixTimestamp, locale = 'en-US') {\n  const finalDate = setupDate(unixTimestamp);\n  const year = finalDate.getFullYear();\n  const weekDay = finalDate.getDay();\n  let month = finalDate.getMonth() + 1;\n  let day = finalDate.getDate();\n  let hours = finalDate.getHours();\n  let minutes = finalDate.getMinutes();\n\n  month = addLeadingZero(month);\n  day = addLeadingZero(day);\n  hours = addLeadingZero(hours);\n  minutes = addLeadingZero(minutes);\n\n  const localeDateString = finalDate.toLocaleDateString(locale, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n\n  return {\n    localeDateString,\n    weekDay,\n    day,\n    month,\n    year,\n    hours,\n    minutes\n  };\n}\n\nexport { addTimezonOffset, addLeadingZero, setupDate };\n","export default (iconKey) => {\n  const data = {\n    'clear-day': {\n      id: 'wi-day-sunny'\n    },\n    'clear-night': {\n      id: 'wi-night-clear'\n    },\n    'partly-cloudy-day': {\n      id: 'wi-day-cloudy'\n    },\n    'partly-cloudy-night': {\n      id: 'wi-night-alt-cloudy'\n    },\n    cloudy: {\n      id: 'wi-cloudy'\n    },\n    rain: {\n      id: 'wi-rain'\n    },\n    sleet: {\n      id: 'wi-sleet'\n    },\n    snow: {\n      id: 'wi-snow'\n    },\n    wind: {\n      id: 'wi-windy'\n    },\n    fog: {\n      id: 'wi-fog'\n    },\n  };\n\n  const icon = data[iconKey];\n\n  if (icon) {\n    return icon;\n  }\n\n  throw new Error(`No icon registered with the key: ${iconKey}`);\n}\n","export default (day) => {\n  const weekdays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fry', 'sat'];\n  const result = weekdays[day];\n\n  if (result) {\n    return result;\n  }\n\n  throw new Error(`No weekday found for index: ${day}`);\n}\n","export default {\n  showInfo: false,\n  dataLoaded: false,\n  latitude: 0,\n  longitude: 0,\n  updating: false,\n  lastUpdate: \"00:00\",\n  currentCondition: {\n    currentCondition: {\n      location: \"--\",\n      temperature: 0,\n      date: \"--\",\n      weather: \"Clear\",\n      dayTime: false,\n      humidity: 0,\n      dataLoaded: false\n    },\n    foreCastDaily: [\n      {\n        weekDay: \"mon\",\n        rainProbability: 0,\n        icon: \"wi-day-sunny\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      },\n      {\n        weekDay: \"tue\",\n        rainProbability: 0,\n        icon: \"wi-day-sunny\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      },\n      {\n        weekDay: \"wed\",\n        rainProbability: 0,\n        icon: \"wi-day-sunny\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      },\n      {\n        weekDay: \"Thu\",\n        rainProbability: 0,\n        icon: \"wi-day-sunny\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      },\n      {\n        weekDay: \"Fry\",\n        rainProbability: 0,\n        icon: \"wi-fog\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      }\n    ],\n    foreCastHourly: [\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 23,\n        icon: \"wi-fog\"\n      },\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 25,\n        icon: \"wi-day-sunny\"\n      },\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 15,\n        icon: \"wi-day-sunny\"\n      },\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 16,\n        icon: \"wi-day-sunny\"\n      },\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 24,\n        icon: \"wi-day-sunny\"\n      }\n    ],\n    location: \"São Paulo\",\n    date: \"Sunday, August 12, 2018\",\n    temperature: 17,\n    weather: \"Mostly Cloudy\"\n  },\n  foreCastHourly: [\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 0,\n      icon: \"wi-day-cloudy\"\n    },\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 0,\n      icon: \"wi-day-cloudy\"\n    },\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 0,\n      icon: \"wi-day-cloudy\"\n    },\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 0,\n      icon: \"wi-night-clear\"\n    },\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 14,\n      icon: \"wi-night-clear\"\n    }\n  ],\n  foreCastDaily: [\n    {\n      weekDay: \"mon\",\n      rainProbability: 0,\n      icon: \"wi-day-sunny\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    },\n    {\n      weekDay: \"tue\",\n      rainProbability: 0,\n      icon: \"wi-day-sunny\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    },\n    {\n      weekDay: \"wed\",\n      rainProbability: 0,\n      icon: \"wi-night-alt-cloudy\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    },\n    {\n      weekDay: \"thu\",\n      rainProbability: 0,\n      icon: \"wi-cloudy\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    },\n    {\n      weekDay: \"fry\",\n      rainProbability: 0,\n      icon: \"wi-cloudy\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    }\n  ]\n}\n","import IpGeoLocation from '../api/ipGeoLocation';\nimport ForeCastAPI from '../api/foreCastAPI';\nimport ReverseGeoLocation from '../api/reverseGeoLocation';\nimport IpFetcher from '../api/ipfetcher';\nimport timeConvert, { addLeadingZero } from '../helpers/time';\nimport icons from '../helpers/icons';\nimport weekdays from '../helpers/weekdays';\nimport initialState from '../initialState';\n\nexport default class Storage {\n  constructor() {\n    this.ipFetcher = new IpFetcher();\n    this.ipGeoLocation = new IpGeoLocation();\n    this.foreCastAPI = new ForeCastAPI(process.env.REACT_APP_DARK_SKY_API_CODE);\n    this.reverseGeoLocation = new ReverseGeoLocation();\n    this.data = { ...initialState };\n    this.currentDate = new Date();\n  }\n\n  update() {\n    this.data = {\n      latitude: this.foreCastAPI.data.latitude,\n      longitude: this.foreCastAPI.data.longitude,\n      lastUpdate: this.getLastUpdate(this.currentDate),\n      currentCondition: {\n        ...initialState,\n        location: this.ipGeoLocation.data.city,\n        date: timeConvert(this.foreCastAPI.data.currently.time).localeDateString,\n        temperature: Math.round(this.foreCastAPI.data.currently.temperature),\n        weather: this.foreCastAPI.data.currently.summary\n      },\n      foreCastHourly: this.foreCastAPI.data.hourly.data.slice(0, 5).map((item) => ({\n        time: timeConvert(item.time).hours,\n        rainProbability: Math.round(item.precipProbability * 100),\n        temperature: Math.round(item.temperature),\n        icon: icons(item.icon).id\n      })),\n      foreCastDaily: this.foreCastAPI.data.daily.data.slice(1, 6).map(item => ({\n        weekDay: weekdays(timeConvert(item.time).weekDay),\n        rainProbability: Math.round(item.precipProbability * 100),\n        icon: icons(item.icon).id,\n        temperature: {\n          max: Math.round(item.temperatureMax),\n          min: Math.round(item.temperatureMin)\n        }\n      }))\n    }\n  }\n\n  getLastUpdate(currentDate) {\n    return `${addLeadingZero(currentDate.getHours())}:${addLeadingZero(currentDate.getMinutes())}`;\n  }\n\n  async _updateIP() {\n    if (localStorage.getItem('ip')) {\n      this.ipFetcher.ip = localStorage.getItem('ip');\n    } else {\n      await this.ipFetcher.fetch();\n\n      localStorage.setItem('ip', this.ipFetcher.ip);\n    }\n  }\n\n  async _updateGeoLocation() {\n    if (localStorage.getItem('geoLocation')) {\n      this.ipGeoLocation.data = JSON.parse(localStorage.getItem('geoLocation'));\n    } else {\n      await this.ipGeoLocation.fetch(this.ipFetcher.ip);\n\n      localStorage.setItem('geoLocation', JSON.stringify(this.ipGeoLocation.data));\n    }\n  }\n\n  async _updateForecast() {\n    if (localStorage.getItem('forecast')) {\n      this.foreCastAPI.data = JSON.parse(localStorage.getItem('forecast'));\n    } else {\n      await this.foreCastAPI.fetch(this.ipGeoLocation.data.latitude, this.ipGeoLocation.data.longitude);\n\n      localStorage.setItem('lastupdate', new Date().getTime());\n\n      localStorage.setItem('forecast', JSON.stringify(this.foreCastAPI.data));\n    }\n  }\n\n  async fetch() {\n    await this._updateIP();\n    await this._updateGeoLocation();\n    await this._updateForecast();\n\n    this.update();\n  }\n\n  async getLocation(latitude, longitude) {\n    this.currentDate = new Date();\n    const prevDate = Number(localStorage.getItem('lastupdate'));\n    const hoursDiff = Math.abs(this.currentDate.getTime() - prevDate) / 3600000;\n\n    this.foreCastAPI.data.latitude = latitude;\n    this.foreCastAPI.data.longitude = longitude;\n    this.data.lastUpdate = this.getLastUpdate(this.currentDate);\n\n    await this.reverseGeoLocation.fetch(latitude, longitude);\n\n    if (hoursDiff > 1.05) {\n      await this.foreCastAPI.fetch(latitude, longitude);\n\n      localStorage.setItem('lastupdate', this.currentDate.getTime());\n      localStorage.setItem('forecast', JSON.stringify(this.foreCastAPI.data));\n    }\n\n    this.ipGeoLocation.data.city = this.reverseGeoLocation.data[0].city || this.reverseGeoLocation.data[0].state;\n\n    this.update();\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Home from './Home';\nimport Info from './Info';\nimport Loader from '../components/Loader';\nimport rAFTimeout from '../helpers/rAFTimeout';\nimport Storage from './storage';\nimport './index.scss';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loader = React.createRef();\n    this.onInfoClick = this.onInfoClick.bind(this);\n    this.onInfoClose = this.onInfoClose.bind(this);\n    this.onRefreshClick = this.onRefreshClick.bind(this);\n    this.onGPSLocationClick = this.onGPSLocationClick.bind(this);\n\n    this.storage = new Storage(process.env.REACT_APP_DARK_SKY_API_CODE);\n    this.state = { ...this.storage.data };\n  }\n\n  async init() {\n    rAFTimeout(() => this.loader.current.animateIn(), 100);\n\n    await this.storage.fetch();\n\n    rAFTimeout(() => {\n      this.loader.current.animateOut();\n\n      rAFTimeout(() => this.updatedState(this.storage.data), 600);\n    }, 1000);\n  }\n\n  updatedState(data) {\n    this.setState({\n      ...data,\n      showInfo: false,\n      dataLoaded: true,\n      updating: false,\n    });\n  }\n\n  async onGetCurrentLocation({ latitude, longitude }) {\n    await this.storage.getLocation(latitude, longitude);\n\n    rAFTimeout(() => this.updatedState(this.storage.data), 600);\n  }\n\n  onGPSLocationClick() {\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.onGetCurrentLocation(position.coords);\n        });\n      }\n    }\n  }\n  onRefreshClick() {\n    const { latitude, longitude } = this.storage.data;\n\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n\n      this.onGetCurrentLocation({ latitude, longitude });\n    }\n  }\n\n  onInfoClick() {\n    this.setState({ showInfo: true });\n  }\n\n  onInfoClose() {\n    this.setState({ showInfo: false });\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          !this.state.dataLoaded ? <Loader ref={this.loader} /> : <Fragment>\n            <Home currentCondition={this.state.currentCondition}\n              foreCastDaily={this.state.foreCastDaily}\n              foreCastHourly={this.state.foreCastHourly}\n              onInfoClick={this.onInfoClick}\n              onGPSLocationClick={this.onGPSLocationClick}\n              updating={this.state.updating}\n              lastUpdate={this.state.lastUpdate}\n              onRefreshClick={this.onRefreshClick} />\n            <Info onInfoClose={this.onInfoClose} show={this.state.showInfo} />\n          </Fragment>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}