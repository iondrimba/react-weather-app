{"version":3,"sources":["components/Forecast/Temperature.js","helpers/rAFTimeout.js","helpers/icons.js","svg/wi-cloudy.svg","svg/wi-day-cloudy.svg","svg/wi-day-sunny.svg","svg/wi-fog.svg","svg/wi-night-alt-cloudy.svg","svg/wi-night-clear.svg","svg/wi-rain.svg","svg/wi-sleet.svg","svg/wi-snow.svg","svg/wi-windy.svg","components/Forecast/index.js","svg/rain-probality.svg","components/RainProbability/index.js","components/ForecastHourly/index.js","components/ForecastDaily/index.js","components/Location/index.js","components/Temperature/index.js","components/Navigation/index.js","components/GPSLocation/index.js","components/Info/index.js","components/DateCurrent/index.js","components/Refresh/index.js","app/Home/index.js","components/Close/index.js","svg/github.svg","app/Info/index.js","components/Loader/index.js","components/Error/index.js","api/ipGeoLocation.js","api/foreCastAPI.js","api/reverseGeoLocation.js","api/ipfetcher.js","helpers/time.js","helpers/weekdays.js","initialState.js","app/storage.js","app/index.js","registerServiceWorker.js","index.js"],"names":["ForeCastTemperature","className","this","props","temperature","PureComponent","fn","delay","start","Date","getTime","handle","loop","call","value","requestAnimationFrame","icons","iconKey","icon","id","cloudy","rain","sleet","snow","wind","fog","Error","Forecast","forecast","React","createRef","rAFTimeout","current","classList","add","title","map","elment","querySelector","querySelectorAll","animate","animationDelay","ref","data-id","alt","src","children","RainProbability","width","height","svg","probability","ForecastHourly","foreCastHourly","item","index","key","time","rainProbability","ForecastDaily","foreCastDaily","weekDay","max","min","Location","text","enableBackground","version","viewBox","d","location","Temperature","status","unit","weather","Navigation","navigation","dots","currentForecast","GPSLocation","button","onMouseDown","bind","onMouseUp","remove","type","aria-label","onTouchStart","onTouchEnd","onClick","onGPSLocationClick","xmlns","cx","cy","r","Info","onInfoClick","DateCurrent","date","Refresh","view","getClass","updating","animation","Home","state","forecastIndex","forecasts","document","swiper","Swiper","direction","on","setState","activeIndex","onInfoClose","currentCondition","onRefreshClick","lastUpdate","Close","onCloseClick","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","transition","close","hide","setAttribute","show","getStyle","aria-hidden","href","target","rel","Loader","loader","circle","rays","animateCircle","animateRays","startRotation","element","_getCircle","IpGeoLocation","secret","endpoint","ip","data","fetch","response","json","result","message","ForeCastAPI","apiSecret","latitude","longitude","ReverseGeoLocation","IpFetcher","addLeadingZero","setupDate","unixTimestamp","utc","test","toString","getTimezoneOffset","addTimezonOffset","locale","finalDate","year","getFullYear","getDay","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","localeDateString","toLocaleDateString","weekday","showInfo","dataLoaded","dayTime","humidity","Storage","ipFetcher","ipGeoLocation","foreCastAPI","process","reverseGeoLocation","initialState","currentDate","error","getLastUpdate","city","timeConvert","currently","Math","round","summary","hourly","slice","precipProbability","daily","weekdays","temperatureMax","temperatureMin","localStorage","getItem","setItem","JSON","parse","stringify","_updateIP","_updateGeoLocation","_updateForecast","update","prevDate","Number","hoursDiff","abs","App","storage","animateIn","animateOut","updatedState","getLocation","navigator","geolocation","getCurrentPosition","position","onGetCurrentLocation","coords","init","errorReachLimit","displayHome","display","Component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","getElementById","URL","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0c25600b.chunk.js","sourcesContent":["\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ForeCastTemperature extends PureComponent {\n  render() {\n    return (\n      <p className=\"forecast__temperature\">{this.props.temperature}\n        <span className=\"temperature__unit-dot\"></span>\n      </p>\n    )\n  }\n}\n\nForeCastTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired\n};\n\nexport default ForeCastTemperature;\n","export default function (fn, delay = 0) {\n  const start = new Date().getTime(),\n    handle = {};\n\n  function loop () {\n    const current = new Date().getTime(),\n      delta = current - start;\n\n    delta >= delay ? fn.call() : handle.value = requestAnimationFrame(loop);\n  };\n\n  handle.value = requestAnimationFrame(loop);\n\n  return handle;\n};\n","import wi_cloudy from '../svg/wi-cloudy.svg';\nimport wi_day_cloudy from '../svg/wi-day-cloudy.svg';\nimport wi_day_sunny from '../svg/wi-day-sunny.svg';\nimport wi_fog from '../svg/wi-fog.svg';\nimport wi_night_alt_cloudy from '../svg/wi-night-alt-cloudy.svg';\nimport wi_night_clear from '../svg/wi-night-clear.svg';\nimport wi_rain from '../svg/wi-rain.svg';\nimport wi_sleet from '../svg/wi-sleet.svg';\nimport wi_snow from '../svg/wi-snow.svg';\nimport wi_windy from '../svg/wi-windy.svg';\n\nexport const icons = {\n  'wi-cloudy': wi_cloudy,\n  'wi-day-cloudy': wi_day_cloudy,\n  'wi-day-sunny': wi_day_sunny,\n  'wi-fog': wi_fog,\n  'wi-night-alt-cloudy': wi_night_alt_cloudy,\n  'wi-night-clear': wi_night_clear,\n  'wi-rain': wi_rain,\n  'wi-sleet': wi_sleet,\n  'wi-snow': wi_snow,\n  'wi-windy': wi_windy,\n};\n\nexport default (iconKey) => {\n  const data = {\n    'clear-day': {\n      id: 'wi-day-sunny'\n    },\n    'clear-night': {\n      id: 'wi-night-clear'\n    },\n    'partly-cloudy-day': {\n      id: 'wi-day-cloudy'\n    },\n    'partly-cloudy-night': {\n      id: 'wi-night-alt-cloudy'\n    },\n    cloudy: {\n      id: 'wi-cloudy'\n    },\n    rain: {\n      id: 'wi-rain'\n    },\n    sleet: {\n      id: 'wi-sleet'\n    },\n    snow: {\n      id: 'wi-snow'\n    },\n    wind: {\n      id: 'wi-windy'\n    },\n    fog: {\n      id: 'wi-fog'\n    },\n  };\n\n  const icon = data[iconKey];\n\n  if (icon) {\n    return icon;\n  }\n\n  throw new Error(`No icon registered with the key: ${iconKey}`);\n}\n","export default __webpack_public_path__ + \"static/media/wi-cloudy.3036dcf4.svg\";","export default __webpack_public_path__ + \"static/media/wi-day-cloudy.2d14b4eb.svg\";","export default __webpack_public_path__ + \"static/media/wi-day-sunny.a12c7b3b.svg\";","export default __webpack_public_path__ + \"static/media/wi-fog.dcbb9c97.svg\";","export default __webpack_public_path__ + \"static/media/wi-night-alt-cloudy.5856194e.svg\";","export default __webpack_public_path__ + \"static/media/wi-night-clear.22c8b82f.svg\";","export default __webpack_public_path__ + \"static/media/wi-rain.58931f0f.svg\";","export default __webpack_public_path__ + \"static/media/wi-sleet.040e9866.svg\";","export default __webpack_public_path__ + \"static/media/wi-snow.f6b34506.svg\";","export default __webpack_public_path__ + \"static/media/wi-windy.d5931498.svg\";","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\nimport { icons } from '../../helpers/icons';\n\nclass Forecast extends PureComponent {\n  constructor() {\n    super();\n\n    this.forecast = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.forecast.current.classList.add('animate-in'), 100);\n\n    rAFTimeout(() => this.title.classList.add('animate-in'), 200);\n\n    rAFTimeout(() => this.icon.classList.add('animate-in'), 250);\n\n    rAFTimeout(() => {\n      this.temperature.map(elment => elment.classList.add('animate-in'));\n    }, 350);\n\n    rAFTimeout(() => this.rain.classList.add('animate-in'), 400);\n  }\n\n  componentDidMount() {\n    this.title = this.forecast.current.querySelector('.forecast__title');\n    this.icon = this.forecast.current.querySelector('.forecast__icon');\n    this.temperature = [...this.forecast.current.querySelectorAll('.forecast__temperature')];\n    this.rain = this.forecast.current.querySelector('.rain');\n\n    rAFTimeout(() => this.animate(), this.props.animationDelay * 100);\n  }\n\n  render() {\n    return (\n      <div ref={this.forecast} className=\"forecast\" data-id={this.props.id}>\n        <span className=\"forecast__title\">{this.props.title}</span>\n        <img className=\"forecast__icon\" alt=\"icon\" src={icons[this.props.icon]} />\n\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nForecast.propTypes = {\n  id: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  animationDelay: PropTypes.number.isRequired,\n  children: PropTypes.any.isRequired,\n};\n\nexport default Forecast;\n","export default __webpack_public_path__ + \"static/media/rain-probality.b7a9b35c.svg\";","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport svg from '../../svg/rain-probality.svg';\nimport './index.scss';\n\nclass RainProbability extends PureComponent {\n  render() {\n    return (\n      <div className=\"rain\">\n        <img width=\"24\" height=\"24\" className=\"rain__icon\" src={svg} alt={`rain probability ${this.props.probability}`} />\n        <span className=\"rain__probability\">{`${this.props.probability}%`}</span>\n      </div>\n    )\n  }\n}\n\nRainProbability.propTypes = {\n  probability: PropTypes.number.isRequired\n};\n\nexport default RainProbability;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ForeCastTemperature from '../Forecast/Temperature';\nimport ForeCast from '../Forecast';\nimport RainProbability from '../RainProbability';\n\nclass ForecastHourly extends PureComponent {\n  render() {\n    return (\n      <section className=\"forecasts__period swiper-slide\">\n        {\n          this.props.foreCastHourly.map((item, index) => <ForeCast key={`hourly-${index}`} id={`hourly-${index}`} title={`${item.time}:00`} icon={item.icon} animationDelay={index}>\n            <ForeCastTemperature temperature={item.temperature} />\n            <RainProbability probability={item.rainProbability} />\n          </ForeCast>)\n        }\n      </section>\n    )\n  }\n}\n\nForecastHourly.propTypes = {\n  foreCastHourly: PropTypes.array,\n};\n\nexport default ForecastHourly;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ForeCastTemperature from '../Forecast/Temperature';\nimport ForeCast from '../Forecast';\nimport RainProbability from '../RainProbability';\n\nclass ForecastDaily extends PureComponent {\n  render() {\n    return (\n      <section className=\"forecasts__period forecasts--daily swiper-slide\">\n        {\n          this.props.foreCastDaily.map((item, index) => <ForeCast key={`daily-${index}`} id={`daily-${index}`} title={item.weekDay} icon={item.icon} animationDelay={index}>\n            <div>\n              <ForeCastTemperature temperature={item.temperature.max} />\n              <ForeCastTemperature temperature={item.temperature.min} />\n            </div>\n            <RainProbability probability={item.rainProbability} />\n          </ForeCast>)\n        }\n      </section>\n    )\n  }\n}\n\nForecastDaily.propTypes = {\n  foreCastDaily: PropTypes.array,\n};\n\nexport default ForecastDaily;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Location extends PureComponent {\n  constructor() {\n    super();\n\n    this.icon = React.createRef();\n    this.text = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.icon.current.classList.add('animate-in'), 250);\n    rAFTimeout(() => this.text.current.classList.add('animate-in'), 350);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <section className=\"location\">\n        <span ref={this.icon} className=\"location__icon\">\n          <svg enableBackground=\"new 0 0 24 24\" height=\"24px\" id=\"location\" version=\"1.1\" viewBox=\"0 0 24 24\" width=\"24px\">\n            <path d=\"M11.513,12.38c-2.117,0-3.835-1.729-3.835-3.862c0-2.135,1.718-3.863,3.835-3.863s3.835,1.729,3.835,3.863  C15.348,10.65,13.63,12.38,11.513,12.38 M11.513,0C6.825,0,3.025,3.827,3.025,8.549c0,4.46,3.844,10.213,6.411,13.014  c0.959,1.045,2.076,2.454,2.076,2.454s1.2-1.417,2.229-2.493C16.306,18.84,20,13.451,20,8.549C20,3.827,16.2,0,11.513,0\" />\n          </svg>\n        </span>\n        <span ref={this.text} className=\"location__text\">{this.props.location}</span>\n      </section>\n    )\n  }\n}\n\nLocation.propTypes = {\n  location: PropTypes.string.isRequired\n};\n\nexport default Location;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Temperature extends PureComponent {\n  constructor() {\n    super();\n\n    this.status = React.createRef();\n    this.value = React.createRef();\n    this.unit = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.status.current.classList.add('animate-in'), 150);\n    rAFTimeout(() => this.value.current.classList.add('animate-in'), 250);\n    rAFTimeout(() => this.unit.current.classList.add('animate-in'), 300);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 400);\n  }\n\n  render() {\n    return (\n      <section className=\"current-condition\">\n        <div className=\"wrapper-temperature\">\n          <span ref={this.status} className=\"temperature__status\">{this.props.weather}</span>\n          <div className=\"temperature\">\n            <span ref={this.value} className=\"temperature__value\">{this.props.temperature}</span>\n            <div ref={this.unit} className=\"temperature__unit\">\n              <span className=\"temperature__unit-dot\"></span>\n              <span className=\"temperature__unit-letter\">c</span>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nTemperature.propTypes = {\n  weather: PropTypes.string.isRequired,\n  temperature: PropTypes.number.isRequired\n};\n\nexport default Temperature;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Navigation extends PureComponent {\n  constructor() {\n    super();\n\n    this.navigation = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => {\n      this.dots.map((elment, index) => {\n        rAFTimeout(() => elment.classList.add('animate-in'), index * 150);\n\n        return elment;\n      });\n    }, 350);\n  }\n\n  componentDidMount() {\n    this.dots = [...this.navigation.current.querySelectorAll('.navigation__dot')];\n\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <section ref={this.navigation} className={`navigation ${this.props.currentForecast}`}>\n        <div className=\"navigation__dot\"></div>\n        <div className=\"navigation__dot\"></div>\n      </section>\n    )\n  }\n}\n\nNavigation.propTypes = {\n  currentForecast: PropTypes.string.isRequired\n};\n\nexport default Navigation;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass GPSLocation extends PureComponent {\n  constructor() {\n    super();\n\n    this.button = React.createRef();\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n  }\n\n  animate() {\n    rAFTimeout(() => this.button.current.classList.add('animate-in'), 430);\n  }\n\n  onMouseDown() {\n    rAFTimeout(() => this.button.current.classList.add('press'), 1);\n  }\n\n  onMouseUp() {\n    rAFTimeout(() => this.button.current.classList.remove('press'), 1);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <button ref={this.button} type=\"button\" className=\"gps-location\" aria-label=\"Get current location\" onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onClick={this.props.onGPSLocationClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"gpslocation\" viewBox=\"0 0 96 96\">\n          <g id=\"XMLID_1_\">\n            <circle id=\"XMLID_3_\" cx=\"48\" cy=\"48\" r=\"9.8\" />\n            <path id=\"XMLID_6_\" d=\"M80.5 44.8h-6.7C72.3 33 63 23.7 51.3 22.2v-6.7h-6.5v6.7C33 23.7 23.7 33 22.2 44.8h-6.7v6.5h6.7C23.7 63 33 72.3 44.8 73.8v6.7h6.5v-6.7C63 72.3 72.3 63 73.8 51.3h6.7v-6.5zM48 67.5c-10.8 0-19.5-8.7-19.5-19.5S37.2 28.5 48 28.5 67.5 37.2 67.5 48 58.8 67.5 48 67.5z\" />\n          </g>\n        </svg>\n      </button>\n    )\n  }\n}\n\nGPSLocation.propTypes = {\n  onGPSLocationClick: PropTypes.func\n};\n\nexport default GPSLocation;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Info extends PureComponent {\n  constructor() {\n    super();\n\n    this.button = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.button.current.classList.add('animate-in'), 500);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <button ref={this.button} type=\"button\" className=\"button-info\" aria-label=\"Information\" onClick={this.props.onInfoClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path d=\"M12 0C5.371 0 0 5.371 0 12s5.371 12 12 12 12-5.371 12-12S18.629 0 12 0zm0 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 3.813c-.184 0-.336-.004-.5.03a1.127 1.127 0 0 0-.438.22.98.98 0 0 0-.28.375c-.071.152-.095.332-.095.562 0 .227.024.406.094.563.07.156.16.28.281.375.122.093.274.148.438.187.164.04.316.063.5.063.18 0 .371-.024.531-.063.16-.04.285-.094.406-.188a.951.951 0 0 0 .282-.375c.07-.152.125-.335.125-.562 0-.23-.055-.41-.125-.563a.98.98 0 0 0-.281-.375c-.122-.093-.247-.183-.407-.218-.16-.035-.351-.032-.531-.032zm-1.219 3.343v8.969h2.438V9.156z\" />\n        </svg>\n      </button>\n    )\n  }\n}\n\nInfo.propTypes = {\n  onInfoClick: PropTypes.func\n};\n\nexport default Info;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass DateCurrent extends PureComponent {\n  constructor() {\n    super();\n\n    this.text = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.text.current.classList.add('animate-in'), 400);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  render() {\n    return (\n      <section className=\"date-current\">\n        <span ref={this.text} className=\"date-current__text\">\n          {this.props.date}\n        </span>\n      </section>\n    )\n  }\n}\n\nDateCurrent.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nexport default DateCurrent;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Refresh extends PureComponent {\n  constructor() {\n    super();\n\n    this.view = React.createRef();\n    this.button = React.createRef();\n    this.getClass = this.getClass.bind(this)\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n  }\n\n  animate() {\n    rAFTimeout(() => this.view.current.classList.add('animate-in'), 350);\n  }\n\n  onMouseDown() {\n    rAFTimeout(() => this.button.current.classList.add('press'), 1);\n  }\n\n  onMouseUp() {\n    rAFTimeout(() => this.button.current.classList.remove('press'), 1);\n  }\n\n  componentDidMount() {\n    rAFTimeout(() => this.animate(), 350);\n  }\n\n  getClass({ updating }) {\n    let animation = '';\n\n    if (this.view.current) {\n      animation = 'animate-in';\n    }\n\n    return `refresh ${animation} ${updating ? 'fetching' : ''}`;\n  }\n\n  render() {\n    return (\n      <section ref={this.view} className={`${this.getClass(this.props)}`}>\n        <span className=\"refresh__time\">{this.props.time}</span>\n        <button ref={this.button} type=\"button\" className=\"button-refresh\" aria-label=\"Refresh content\" onTouchStart={this.onMouseDown} onTouchEnd={this.onMouseUp} onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp} onClick={this.props.onClick}>\n          <svg viewBox=\"0 0 96 96\">\n            <path d=\"M48 15.5c-8.8 0-17 3.5-23 9.5l-6.3-6.3v19.5h19.5l-8.6-8.6C34.4 24.8 40.9 22 48 22c14.3 0 26 11.7 26 26S62.3 74 48 74 22 62.3 22 48h-6.5c0 17.9 14.6 32.5 32.5 32.5S80.5 65.9 80.5 48 65.9 15.5 48 15.5z\" />\n          </svg>\n        </button>\n      </section>\n    )\n  }\n}\n\nRefresh.propTypes = {\n  onClick: PropTypes.func,\n  time: PropTypes.string,\n};\n\nexport default Refresh;\n","import React, { PureComponent, Fragment } from 'react';\nimport Swiper from 'swiper';\nimport ForecastHourly from '../../components/ForecastHourly';\nimport ForecastDaily from '../../components/ForecastDaily';\nimport Location from '../../components/Location';\nimport Temperature from '../../components/Temperature';\nimport Navigation from '../../components/Navigation';\nimport GPSLocation from '../../components/GPSLocation';\nimport Info from '../../components/Info';\nimport DateCurrent from '../../components/DateCurrent';\nimport Refresh from '../../components/Refresh';\nimport PropTypes from 'prop-types';\n\nclass Home extends PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      currentForecast: 'hourly',\n      forecastIndex: ['hourly', 'daily'],\n    };\n  }\n\n  componentDidMount() {\n    this.forecasts = [...document.querySelectorAll('.forecasts__period')];\n\n    this.swiper = new Swiper('.swiper-container', {\n      direction: 'horizontal',\n      loop: false\n    });\n\n    this.swiper.on('slideChangeTransitionEnd', () => {\n      this.setState({ currentForecast: this.state.forecastIndex[this.swiper.activeIndex] });\n    });\n  }\n\n  render() {\n    return <Fragment>\n      <GPSLocation onGPSLocationClick={this.props.onGPSLocationClick} />\n      <Info onInfoClick={this.props.onInfoClick} onInfoClose={this.props.onInfoClose} />\n      <Location location={this.props.currentCondition.location} />\n      <DateCurrent date={this.props.currentCondition.date} />\n      <Temperature weather={this.props.currentCondition.weather} temperature={this.props.currentCondition.temperature} />\n      <Refresh onClick={this.props.onRefreshClick} updating={this.props.updating} time={this.props.lastUpdate} />\n      <section className=\"forecasts\">\n        <div className=\"forecasts__scroll-panel swiper-container\">\n          <div className=\"swiper-wrapper\">\n            <ForecastHourly foreCastHourly={this.props.foreCastHourly} />\n            <ForecastDaily foreCastDaily={this.props.foreCastDaily} />\n          </div>\n        </div>\n        <Navigation currentForecast={this.state.currentForecast} />\n      </section>\n    </Fragment>\n  }\n}\n\nHome.propTypes = {\n  foreCastHourly: PropTypes.array,\n  foreCastDaily: PropTypes.array,\n  updating: PropTypes.bool,\n  lastUpdate: PropTypes.string,\n  currentCondition: PropTypes.object,\n  onGPSLocationClick: PropTypes.func,\n  onInfoClick: PropTypes.func,\n  onInfoClose: PropTypes.func,\n  onRefreshClick: PropTypes.func\n};\n\nexport default Home;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Close extends PureComponent {\n  constructor() {\n    super();\n\n    this.button = React.createRef();\n  }\n\n  animate() {\n    rAFTimeout(() => this.button.current.classList.add('animate-in'), 1);\n  }\n\n  hide() {\n    rAFTimeout(() => this.button.current.classList.remove('animate-in'), 1);\n  }\n\n  render() {\n    return (\n      <button ref={this.button} type=\"button\" className=\"button-close\" aria-label=\"Close view\" onClick={this.props.onCloseClick}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"#fff\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\">\n          <path d=\"M18 6L6 18M6 6l12 12\" />\n        </svg>\n      </button>\n    )\n  }\n}\n\nClose.propTypes = {\n  onCloseClick: PropTypes.func,\n};\n\nexport default Close;\n","export default __webpack_public_path__ + \"static/media/github.5cb865b1.svg\";","import React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport Close from '../../components/Close';\nimport svg from '../../svg/github.svg';\nimport './index.scss';\nimport './transition.scss';\n\nclass Info extends PureComponent {\n  constructor() {\n    super();\n\n    this.transition = React.createRef();\n    this.view = React.createRef();\n    this.close = React.createRef();\n    this.onInfoClose = this.onInfoClose.bind(this);\n  }\n\n  onInfoClose() {\n    rAFTimeout(() => this.view.current.classList.remove('animate-in'), 1);\n    rAFTimeout(() => this.close.current.hide(), 20);\n    rAFTimeout(() => this.transition.current.classList.remove('animate-in'), 100);\n    rAFTimeout(() => {\n      this.props.onInfoClose();\n      this.view.current.setAttribute('aria-hidden', true);\n    }, 110);\n  }\n\n  getStyle(show) {\n    if (!show) {\n      return '';\n    }\n\n    rAFTimeout(() => this.transition.current.classList.add('animate-in'), 1);\n\n    rAFTimeout(() => this.close.current.animate(), 50);\n\n    rAFTimeout(() => {\n      this.view.current.classList.remove('hide');\n      this.view.current.classList.add('animate-in');\n      this.view.current.setAttribute('aria-hidden', false);\n    }, 150);\n\n    return '';\n  }\n\n  render() {\n    return <Fragment>\n      <div ref={this.transition} className=\"transition\"></div>\n      <section ref={this.view} className={`info ${this.getStyle(this.props.show)}`} aria-hidden={true}>\n        <Close ref={this.close} onCloseClick={this.onInfoClose} />\n        <h1>About</h1>\n        <p>PWA Weather Application made with React/Scss/ES6</p>\n        <p>This is a personal project built in my spare time for learning purposes.</p>\n        <h2>APIs</h2>\n        <ul>\n          <li><a className=\"link\" href=\"https://www.ipify.org\" target=\"_blank\" rel=\"noopener noreferrer\">Ipify (ip address)</a></li>\n          <li><a className=\"link\" href=\"https://ipstack.com\" target=\"_blank\" rel=\"noopener noreferrer\">IpStack (ip based geolocation)</a></li>\n          <li><a className=\"link\" href=\"https://darksky.net\" target=\"_blank\" rel=\"noopener noreferrer\">DarkSky (weather forecasting)</a></li>\n          <li><a className=\"link\" href=\"https://opencagedata.com/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenCage (reverse geolocation)</a></li>\n        </ul>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/iondrimba/react-weather-app\" className=\"github\" title=\"Github\">\n          <img src={svg} alt=\"Github icon\" width=\"32\" height=\"32\" />\n        </a>\n      </section>\n    </Fragment>\n  }\n}\n\nInfo.propTypes = {\n  show: PropTypes.bool,\n  onInfoClick: PropTypes.func,\n  onInfoClose: PropTypes.func\n};\n\nexport default Info;\n","import React, { PureComponent } from 'react';\nimport rAFTimeout from '../../helpers/rAFTimeout';\nimport './index.scss';\n\nclass Loader extends PureComponent {\n  constructor() {\n    super();\n\n    this.loader = React.createRef();\n    this.circle = React.createRef();\n    this.rays = [];\n  }\n\n  _getCircle() {\n    if(this.circle.current) {\n      return this.circle.current;\n    }\n\n    return document.querySelector('.loader__circle');\n  }\n\n  animateIn() {\n    this.animateCircle();\n\n    rAFTimeout(() => this.animateRays(), 300);\n\n    rAFTimeout(() => this.startRotation(), 500);\n  }\n\n  animateRays() {\n    this.rays.map((element, index) => {\n      rAFTimeout(() => element.classList.add('animate-in'), index * 80);\n\n      return element;\n    });\n  }\n\n  startRotation() {\n    rAFTimeout(() => this._getCircle().classList.add('start-rotation'), 300);\n  }\n\n  animateCircle() {\n    rAFTimeout(() => this._getCircle().classList.add('animate-in'), 150);\n  }\n\n  animateOut() {\n    rAFTimeout(() => this._getCircle().classList.add('animate-out'), 550);\n\n    this.rays.map((element, index) => {\n      rAFTimeout(() => element.classList.add('animate-out'), index * 50);\n\n      return element;\n    });\n  }\n\n  componentDidMount() {\n    this.rays = [...this._getCircle().querySelectorAll('.ray')];\n  }\n\n  render() {\n    return (\n      <div ref={this.loader} className=\"loader\">\n        <div ref={this.circle} className=\"loader__circle\">\n          {\n            [0, 1].map((index) => <div key={`ray_${index}`} className=\"rays\">\n              <div className=\"ray ray--north\"></div>\n              <div className=\"ray ray--west\"></div>\n              <div className=\"ray ray--south\"></div>\n              <div className=\"ray ray--east\"></div>\n            </div>)\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Loader;\n","import React, { PureComponent } from 'react';\nimport './index.scss';\n\nclass Error extends PureComponent {\n  render() {\n    return (\n      <div className=\"error\">\n        <h1>:(</h1>\n        This application uses a free service from <a target=\"blank\" rel=\"noopener\" href=\"https://ipstack.com/\">https://ipstack.com/</a> and the current usage exceded the reach limit.<br /><br />Please come back later.\n      </div>\n    )\n  }\n}\n\nexport default Error;\n","class IpGeoLocation {\n  constructor(secret) {\n    this.endpoint = ip => `https://weather-api-nodejs.herokuapp.com/api/ip?ip=${ip}`;\n    this.data = null;\n    this.secret = secret;\n  }\n\n  async fetch(ip) {\n    try {\n      const response = await fetch(this.endpoint(ip));\n      const result = await response.json();\n\n      this.data = result;\n    } catch (error) {\n      throw new Error(`IpGeoLocation unable to fetch: ${error.message}`);\n    }\n  }\n}\n\nexport default IpGeoLocation;\n","class ForeCastAPI {\n  constructor(apiSecret) {\n    this.secret = apiSecret;\n    this.endpoint = (latitude, longitude) => `https://weather-api-nodejs.herokuapp.com/api?latitude=${latitude}&longitude=${longitude}`;\n    this.data = null;\n  }\n\n  async fetch(latitude, longitude) {\n    try {\n      const response = await fetch(this.endpoint(latitude, longitude));\n      this.data = await response.json();\n    } catch (error) {\n      throw new Error(`ForeCastAPI unable to fetch: ${error.message}`);\n    }\n  }\n}\n\nexport default ForeCastAPI;\n","class ReverseGeoLocation {\n  constructor() {\n    this.endpoint = (latitude, longitude) => `https://weather-api-nodejs.herokuapp.com/api/geolocation?latitude=${latitude}&longitude=${longitude}`;\n    this.data = null;\n  }\n\n  async fetch(latitude, longitude) {\n    try {\n      const response = await fetch(this.endpoint(latitude, longitude));\n      const result = await response.json();\n\n      this.data = result;\n    } catch (error) {\n      throw new Error(`ReverseGeoLocation unable to fetch: ${error.message}`);\n    }\n  }\n}\n\nexport default ReverseGeoLocation;\n","class IpFetcher {\n  constructor() {\n    this.ip = '';\n    this.endpoint = 'https://api.ipify.org/?format=json';\n  }\n\n  async fetch() {\n    try {\n      const response = await fetch(this.endpoint);\n      const result = await response.json();\n      this.ip = result.ip;\n    } catch (error) {\n      throw new Error(`IpFetcher unable to fetch: ${error.message}`);\n    }\n  }\n}\n\nexport default IpFetcher;\n","const addLeadingZero = (value) => (value < 10) ? `0${value}` : value;\n\nconst addTimezonOffset = (date, time) => {\n  const match = /GMT\\+\\d+/.test(date.toString());\n  let result = time;\n\n  if (match) {\n    result = time + date.getTimezoneOffset() * 60000;\n  }\n\n  return result;\n};\n\nconst setupDate = (unixTimestamp) => {\n  const date = new Date(unixTimestamp * 1000);\n  const utc = date.getTime();\n\n  return new Date(addTimezonOffset(date, utc));\n};\n\nexport default function (unixTimestamp, locale = 'en-US') {\n  const finalDate = setupDate(unixTimestamp);\n  const year = finalDate.getFullYear();\n  const weekDay = finalDate.getDay();\n  let month = finalDate.getMonth() + 1;\n  let day = finalDate.getDate();\n  let hours = finalDate.getHours();\n  let minutes = finalDate.getMinutes();\n\n  month = addLeadingZero(month);\n  day = addLeadingZero(day);\n  hours = addLeadingZero(hours);\n  minutes = addLeadingZero(minutes);\n\n  const localeDateString = finalDate.toLocaleDateString(locale, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n\n  return {\n    localeDateString,\n    weekDay,\n    day,\n    month,\n    year,\n    hours,\n    minutes\n  };\n}\n\nexport { addTimezonOffset, addLeadingZero, setupDate };\n","export default (day) => {\n  const weekdays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n  const result = weekdays[day];\n\n  if (result) {\n    return result;\n  }\n\n  throw new Error(`No weekday found for index: ${day}`);\n}\n","export default {\n  showInfo: false,\n  dataLoaded: false,\n  latitude: 0,\n  longitude: 0,\n  updating: false,\n  lastUpdate: \"00:00\",\n  currentCondition: {\n    currentCondition: {\n      location: \"--\",\n      temperature: 0,\n      date: \"--\",\n      weather: \"Clear\",\n      dayTime: false,\n      humidity: 0,\n      dataLoaded: false\n    },\n    foreCastDaily: [\n      {\n        weekDay: \"mon\",\n        rainProbability: 0,\n        icon: \"wi-day-sunny\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      },\n      {\n        weekDay: \"tue\",\n        rainProbability: 0,\n        icon: \"wi-day-sunny\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      },\n      {\n        weekDay: \"wed\",\n        rainProbability: 0,\n        icon: \"wi-day-sunny\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      },\n      {\n        weekDay: \"Thu\",\n        rainProbability: 0,\n        icon: \"wi-day-sunny\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      },\n      {\n        weekDay: \"Fri\",\n        rainProbability: 0,\n        icon: \"wi-fog\",\n        temperature: {\n          max: 0,\n          min: 0\n        }\n      }\n    ],\n    foreCastHourly: [\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 23,\n        icon: \"wi-fog\"\n      },\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 25,\n        icon: \"wi-day-sunny\"\n      },\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 15,\n        icon: \"wi-day-sunny\"\n      },\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 16,\n        icon: \"wi-day-sunny\"\n      },\n      {\n        time: 0,\n        rainProbability: 0,\n        temperature: 24,\n        icon: \"wi-day-sunny\"\n      }\n    ],\n    location: \"São Paulo\",\n    date: \"Sunday, August 12, 2018\",\n    temperature: 17,\n    weather: \"Mostly Cloudy\"\n  },\n  foreCastHourly: [\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 0,\n      icon: \"wi-day-cloudy\"\n    },\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 0,\n      icon: \"wi-day-cloudy\"\n    },\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 0,\n      icon: \"wi-day-cloudy\"\n    },\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 0,\n      icon: \"wi-night-clear\"\n    },\n    {\n      time: 0,\n      rainProbability: 0,\n      temperature: 14,\n      icon: \"wi-night-clear\"\n    }\n  ],\n  foreCastDaily: [\n    {\n      weekDay: \"mon\",\n      rainProbability: 0,\n      icon: \"wi-day-sunny\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    },\n    {\n      weekDay: \"tue\",\n      rainProbability: 0,\n      icon: \"wi-day-sunny\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    },\n    {\n      weekDay: \"wed\",\n      rainProbability: 0,\n      icon: \"wi-night-alt-cloudy\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    },\n    {\n      weekDay: \"thu\",\n      rainProbability: 0,\n      icon: \"wi-cloudy\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    },\n    {\n      weekDay: \"fri\",\n      rainProbability: 0,\n      icon: \"wi-cloudy\",\n      temperature: {\n        max: 0,\n        min: 0\n      }\n    }\n  ]\n}\n","import IpGeoLocation from '../api/ipGeoLocation';\nimport ForeCastAPI from '../api/foreCastAPI';\nimport ReverseGeoLocation from '../api/reverseGeoLocation';\nimport IpFetcher from '../api/ipfetcher';\nimport timeConvert, { addLeadingZero } from '../helpers/time';\nimport icons from '../helpers/icons';\nimport weekdays from '../helpers/weekdays';\nimport initialState from '../initialState';\n\nexport default class Storage {\n  constructor() {\n    this.ipFetcher = new IpFetcher();\n    this.ipGeoLocation = new IpGeoLocation();\n    this.foreCastAPI = new ForeCastAPI(process.env.REACT_APP_DARK_SKY_API_CODE);\n    this.reverseGeoLocation = new ReverseGeoLocation();\n    this.data = { ...initialState };\n    this.currentDate = new Date();\n  }\n\n  update() {\n    if (!this.ipGeoLocation.data.error) {\n      this.data = {\n        latitude: this.foreCastAPI.data.latitude,\n        longitude: this.foreCastAPI.data.longitude,\n        lastUpdate: this.getLastUpdate(this.currentDate),\n        currentCondition: {\n          ...initialState,\n          location: this.ipGeoLocation.data.city,\n          date: timeConvert(this.foreCastAPI.data.currently.time).localeDateString,\n          temperature: Math.round(this.foreCastAPI.data.currently.temperature),\n          weather: this.foreCastAPI.data.currently.summary\n        },\n        foreCastHourly: this.foreCastAPI.data.hourly.data.slice(0, 5).map((item) => ({\n          time: timeConvert(item.time).hours,\n          rainProbability: Math.round(item.precipProbability * 100),\n          temperature: Math.round(item.temperature),\n          icon: icons(item.icon).id\n        })),\n        foreCastDaily: this.foreCastAPI.data.daily.data.slice(1, 6).map(item => ({\n          weekDay: weekdays(timeConvert(item.time).weekDay),\n          rainProbability: Math.round(item.precipProbability * 100),\n          icon: icons(item.icon).id,\n          temperature: {\n            max: Math.round(item.temperatureMax),\n            min: Math.round(item.temperatureMin)\n          }\n        }))\n      }\n    }\n\n  }\n\n  getLastUpdate(currentDate) {\n    return `${addLeadingZero(currentDate.getHours())}:${addLeadingZero(currentDate.getMinutes())}`;\n  }\n\n  async _updateIP() {\n    if (localStorage.getItem('ip')) {\n      this.ipFetcher.ip = localStorage.getItem('ip');\n    } else {\n      await this.ipFetcher.fetch();\n\n      localStorage.setItem('ip', this.ipFetcher.ip);\n    }\n  }\n\n  async _updateGeoLocation() {\n    if (localStorage.getItem('geoLocation')) {\n      this.ipGeoLocation.data = JSON.parse(localStorage.getItem('geoLocation'));\n    } else {\n      await this.ipGeoLocation.fetch(this.ipFetcher.ip);\n\n      localStorage.setItem('geoLocation', JSON.stringify(this.ipGeoLocation.data));\n    }\n  }\n\n  async _updateForecast() {\n    if (localStorage.getItem('forecast')) {\n      this.foreCastAPI.data = JSON.parse(localStorage.getItem('forecast'));\n    } else {\n      await this.foreCastAPI.fetch(this.ipGeoLocation.data.latitude, this.ipGeoLocation.data.longitude);\n\n      localStorage.setItem('lastupdate', new Date().getTime());\n\n      localStorage.setItem('forecast', JSON.stringify(this.foreCastAPI.data));\n    }\n  }\n\n  async fetch() {\n    await this._updateIP();\n    await this._updateGeoLocation();\n    await this._updateForecast();\n\n    this.update();\n  }\n\n  async getLocation(latitude, longitude) {\n    this.currentDate = new Date();\n    const prevDate = Number(localStorage.getItem('lastupdate'));\n    const hoursDiff = Math.abs(this.currentDate.getTime() - prevDate) / 3600000;\n\n    this.foreCastAPI.data.latitude = latitude;\n    this.foreCastAPI.data.longitude = longitude;\n    this.data.lastUpdate = this.getLastUpdate(this.currentDate);\n\n    await this.reverseGeoLocation.fetch(latitude, longitude);\n\n    if (hoursDiff > 1.05) {\n      await this.foreCastAPI.fetch(latitude, longitude);\n\n      localStorage.setItem('lastupdate', this.currentDate.getTime());\n      localStorage.setItem('forecast', JSON.stringify(this.foreCastAPI.data));\n    }\n\n    this.ipGeoLocation.data.city = this.reverseGeoLocation.data[0].city || this.reverseGeoLocation.data[0].state;\n\n    this.update();\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Home from './Home';\nimport Info from './Info';\nimport Loader from '../components/Loader';\nimport Error from '../components/Error';\nimport rAFTimeout from '../helpers/rAFTimeout';\nimport Storage from './storage';\nimport './index.scss';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loader = React.createRef();\n    this.onInfoClick = this.onInfoClick.bind(this);\n    this.onInfoClose = this.onInfoClose.bind(this);\n    this.onRefreshClick = this.onRefreshClick.bind(this);\n    this.onGPSLocationClick = this.onGPSLocationClick.bind(this);\n\n    this.storage = new Storage(process.env.REACT_APP_DARK_SKY_API_CODE);\n    this.state = { ...this.storage.data };\n  }\n\n  async init() {\n    rAFTimeout(() => this.loader.current.animateIn(), 100);\n\n    await this.storage.fetch();\n\n    rAFTimeout(() => {\n      this.loader.current.animateOut();\n\n      rAFTimeout(() => this.updatedState(this.storage), 600);\n    }, 1000);\n  }\n\n  updatedState({ ipGeoLocation, data }) {\n    if (ipGeoLocation.data && ipGeoLocation.data.error) {\n      this.setState({\n        error: ipGeoLocation.data.error,\n        dataLoaded: true,\n      });\n    } else {\n      this.setState({\n        ...data,\n        showInfo: false,\n        dataLoaded: true,\n        updating: false,\n      });\n    }\n  }\n\n  async onGetCurrentLocation({ latitude, longitude }) {\n    await this.storage.getLocation(latitude, longitude);\n\n    rAFTimeout(() => this.updatedState(this.storage), 600);\n  }\n\n  onGPSLocationClick() {\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.onGetCurrentLocation(position.coords);\n        });\n      }\n    }\n  }\n  onRefreshClick() {\n    const { latitude, longitude } = this.storage.data;\n\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n\n      this.onGetCurrentLocation({ latitude, longitude });\n    }\n  }\n\n  onInfoClick() {\n    this.setState({ showInfo: true });\n  }\n\n  onInfoClose() {\n    this.setState({ showInfo: false });\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  errorReachLimit() {\n    return <Error/>\n  }\n\n  display() {\n    return (this.state.error ? this.errorReachLimit() : this.displayHome());\n  }\n\n  displayHome() {\n    return (\n      <Fragment>\n        <Home currentCondition={this.state.currentCondition}\n          foreCastDaily={this.state.foreCastDaily}\n          foreCastHourly={this.state.foreCastHourly}\n          onInfoClick={this.onInfoClick}\n          onGPSLocationClick={this.onGPSLocationClick}\n          updating={this.state.updating}\n          lastUpdate={this.state.lastUpdate}\n          onRefreshClick={this.onRefreshClick} />\n        <Info onInfoClose={this.onInfoClose} show={this.state.showInfo} />\n      </Fragment>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          !this.state.dataLoaded ? <Loader ref={this.loader} /> : this.display()\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}